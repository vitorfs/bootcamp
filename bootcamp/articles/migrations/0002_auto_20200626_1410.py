# Generated by Django 3.0.7 on 2020-06-26 14:10

from django.db import migrations, models
import django.db.models.deletion
import taggit_selectize.managers


def recreate_tagged_items(apps, schema_editor):
    TaggedArticle = apps.get_model('articles', 'TaggedArticle')
    TaggedItem = apps.get_model('taggit', 'TaggedItem')

    old_tagged_items = TaggedItem.objects.filter(content_type__model='article')
    for old in old_tagged_items:
        TaggedArticle.objects.create(tag=old.tag, content_object_id=old.object_id)
    old_tagged_items.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('articles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaggedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.Article')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles_taggedarticle_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='article',
            name='tags',
            field=taggit_selectize.managers.TaggableManager(help_text='A comma-separated list of tags.', through='articles.TaggedArticle', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.RunPython(recreate_tagged_items, reverse_code=migrations.RunPython.noop),
    ]
